{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/model/auth.service.ts","webpack:///src/app/model/cart.model.ts","webpack:///src/app/model/model.module.ts","webpack:///src/app/model/order.model.ts","webpack:///src/app/model/order.repository.ts","webpack:///src/app/model/product.model.ts","webpack:///src/app/model/product.repository.ts","webpack:///src/app/model/rest.datasource.ts","webpack:///src/app/model/static.datasource.ts","webpack:///src/app/store/cart.component.ts","webpack:///src/app/store/cartSummary.component.html","webpack:///src/app/store/cartDetail.component.ts","webpack:///src/app/store/cartDetail.component.html","webpack:///src/app/store/checkout.component.ts","webpack:///src/app/store/checkout.component.html","webpack:///src/app/store/store.component.ts","webpack:///src/app/store/store.component.html","webpack:///src/app/store/store.module.ts","webpack:///src/app/storeFirst.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","forRoot","path","component","canActivate","loadChildren","m","AdminModule","redirectTo","imports","providers","declarations","bootstrap","AuthService","datasource","username","password","authenticate","auth_token","Cart","lines","itemCount","cartPrice","product","quantity","line","find","undefined","push","CartLine","recalculate","Number","index","findIndex","splice","forEach","l","price","ModelModule","provide","useClass","Order","cart","shipped","name","address","city","state","zip","country","clear","OrderRepository","dataSource","orders","order","saveOrder","Product","category","description","ProductRepository","products","categories","getProducts","subscribe","data","map","p","filter","c","array","indexOf","sort","PROTOCOL","PORT","RestDataSource","http","baseUrl","location","hostname","get","post","user","pass","pipe","response","success","token","getOptions","put","headers","Authorization","StaticDataSource","console","log","JSON","stringify","CartSummaryComponent","templateUrl","CartDetailComponent","CheckoutComponent","repository","orderSent","submitted","form","valid","styleUrls","StoreComponent","router","selectedCategory","productsPerPage","selectedPage","newCategory","newPage","newSize","changePage","addLine","navigateByUrl","pageIndex","slice","getCategories","pages","length","pageCount","Math","ceil","pageNumbers","Array","fill","x","i","changeCategory","changePageSize","StoreModule","StoreFirstGuard","firstNavigation","route","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: '<router-outlet></router-outlet>',\r\n})\r\nexport class AppComponent {}\r\n","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { AppComponent } from './app.component'\r\nimport { StoreModule } from './store/store.module'\r\nimport { RouterModule } from'@angular/router'\r\nimport { StoreComponent } from './store/store.component'\r\nimport { CartDetailComponent } from './store/cartDetail.component'\r\nimport { CheckoutComponent } from './store/checkout.component'\r\nimport { StoreFirstGuard } from './storeFirst.guard'\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, \r\n    StoreModule,\r\n  RouterModule.forRoot([\r\n    { path: 'store', component: StoreComponent, canActivate: [StoreFirstGuard] },\r\n    { path: 'cart', component: CartDetailComponent, canActivate: [StoreFirstGuard] },\r\n    { path: 'checkout', component: CheckoutComponent, canActivate: [StoreFirstGuard] },\r\n    {\r\n      path: 'admin',\r\n      loadChildren: () => import('./admin/admin.module').then((m) => m.AdminModule),\r\n      canActivate: [StoreFirstGuard],\r\n    },\r\n    { path: '**', redirectTo: '/store' },    \r\n  ]),\r\n  ],\r\n  providers: [StoreFirstGuard],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { RestDataSource } from './rest.datasource'\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private datasource: RestDataSource) {}\r\n\r\n  authenticate(username: string, password: string): Observable<boolean> {\r\n    return this.datasource.authenticate(username, password)\r\n  }\r\n\r\n  get authenticated(): boolean {\r\n    return this.datasource.auth_token != null\r\n  }\r\n\r\n  clear() {\r\n    this.datasource.auth_token = null\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Product } from './product.model'\r\n\r\n@Injectable() // inject it to other places\r\nexport class Cart {\r\n  public lines: CartLine[] = []\r\n  public itemCount: number = 0\r\n  public cartPrice: number = 0\r\n\r\n  addLine(product: Product, quantity: number = 1) {\r\n    let line = this.lines.find(line => line.product.id == product.id)\r\n    if (line != undefined) {\r\n      line.quantity += quantity\r\n    } else {\r\n      this.lines.push(new CartLine(product, quantity))\r\n    }\r\n    this.recalculate()\r\n  }\r\n\r\n  updateQuantity(product: Product, quantity: number) {\r\n    let line = this.lines.find(line => line.product.id == product.id)\r\n    if (line != undefined) {\r\n      line.quantity = Number(quantity)\r\n    }\r\n    this.recalculate()\r\n  }\r\n\r\n  removeLine(id: number) {\r\n    let index = this.lines.findIndex(line => line.product.id == id)\r\n    this.lines.splice(index, 1)\r\n    this.recalculate()\r\n  }\r\n\r\n  clear() {\r\n    this.lines = []\r\n    this.itemCount = 0\r\n    this.cartPrice = 0\r\n  }\r\n\r\n  private recalculate() {\r\n    this.itemCount = 0\r\n    this.cartPrice = 0\r\n    this.lines.forEach(l => {\r\n      this.itemCount += l.quantity\r\n      this.cartPrice += l.quantity * l.product.price\r\n    })\r\n  }\r\n}\r\n\r\nexport class CartLine {\r\n  constructor(public product: Product, public quantity: number) {}\r\n\r\n  get lineTotal() {\r\n    return this.quantity * this.product.price\r\n  }\r\n}","import { NgModule } from '@angular/core'\r\nimport { ProductRepository } from './product.repository'\r\nimport { StaticDataSource } from './static.datasource'\r\nimport { Cart } from './cart.model'\r\nimport { Order } from './order.model'\r\nimport { OrderRepository } from './order.repository'\r\nimport { RestDataSource } from './rest.datasource'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { AuthService } from './auth.service'\r\n\r\n// make its classes/services available to other modules\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  providers: [ProductRepository, \r\n    { provide: StaticDataSource, useClass: RestDataSource }\r\n    , Cart, Order, OrderRepository,AuthService,RestDataSource],\r\n})\r\nexport class ModelModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Cart } from './cart.model'\r\n\r\n@Injectable()\r\nexport class Order {\r\n  public id: number\r\n  public name: string\r\n  public address: string\r\n  public city: string\r\n  public state: string\r\n  public zip: string\r\n  public country: string\r\n  public shipped: boolean = false\r\n\r\n  constructor(public cart: Cart) {}\r\n\r\n  clear() {\r\n    this.id = null\r\n    this.name = this.address = this.city = null\r\n    this.state = this.zip = this.country = null\r\n    this.shipped = false\r\n    this.cart.clear()\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Order } from './order.model'\r\nimport { StaticDataSource } from './static.datasource'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable()\r\nexport class OrderRepository {\r\n  private orders: Order[] = []\r\n  constructor(private dataSource: StaticDataSource) {}\r\n  getOrders(): Order[] {\r\n    return this.orders\r\n  }\r\n  saveOrder(order: Order): Observable<Order> {\r\n    return this.dataSource.saveOrder(order)\r\n  }\r\n}","export class Product {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public category?: string,\r\n    public description?: string,\r\n    public price?: number,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Product } from './product.model'\r\nimport { StaticDataSource } from './static.datasource'\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n  private products: Product[] = []\r\n  private categories: string[] = []\r\n\r\n  constructor(private dataSource: StaticDataSource) {\r\n    dataSource.getProducts().subscribe(data => {\r\n      this.products = data\r\n      this.categories = data\r\n        .map(p => p.category)\r\n        .filter((c, index, array) => array.indexOf(c) == index)\r\n        .sort()\r\n    })\r\n  }\r\n\r\n  getProducts(category: string = null): Product[] {\r\n    return this.products.filter(p => category == null || category == p.category)\r\n  }\r\n\r\n  getProduct(id: number): Product {\r\n    return this.products.find(p => p.id == id)\r\n  }\r\n\r\n  getCategories(): string[] {\r\n    return this.categories\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { Product } from './product.model'\r\nimport { Order } from './order.model'\r\nimport { map } from 'rxjs/operators'\r\nimport { HttpHeaders } from '@angular/common/http'\r\n\r\nconst PROTOCOL = 'http'\r\nconst PORT = 3500\r\n\r\n@Injectable()\r\nexport class RestDataSource {\r\n  baseUrl: string\r\n  auth_token: string\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/`\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.baseUrl + 'products')\r\n  }\r\n\r\n  saveOrder(order: Order): Observable<Order> {\r\n    return this.http.post<Order>(this.baseUrl + 'orders', order)\r\n  }\r\n\r\n  authenticate(user: string, pass: string): Observable<boolean> {\r\n    return this.http\r\n      .post<any>(this.baseUrl + 'login', {\r\n        name: user,\r\n        password: pass,\r\n      })\r\n      .pipe(\r\n        map((response) => {\r\n          this.auth_token = response.success ? response.token : null\r\n          return response.success\r\n        }),\r\n      )\r\n  }\r\n\r\n  saveProduct(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(this.baseUrl + 'products', product, this.getOptions())\r\n  }\r\n\r\n  updateProduct(product): Observable<Product> {\r\n    return this.http.put<Product>(\r\n      `${this.baseUrl}products/${product.id}`,\r\n      product,\r\n      this.getOptions(),\r\n    )\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<Product> {\r\n    return this.http.delete<Product>(`${this.baseUrl}products/${id}`, this.getOptions())\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(this.baseUrl + 'orders', this.getOptions())\r\n  }\r\n\r\n  deleteOrder(id: number): Observable<Order> {\r\n    return this.http.delete<Order>(`${this.baseUrl}orders/${id}`, this.getOptions())\r\n  }\r\n\r\n  updateOrder(order: Order): Observable<Order> {\r\n    return this.http.put<Order>(`${this.baseUrl}orders/${order.id}`, this.getOptions())\r\n  }\r\n\r\n  private getOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        Authorization: `Bearer<${this.auth_token}>`,\r\n      }),\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Product } from './product.model'\r\nimport { Observable, from } from 'rxjs'\r\nimport { Order } from './order.model'\r\n\r\n@Injectable()\r\nexport class StaticDataSource {\r\n  private products: Product[] = [\r\n    new Product(1, 'Product 1', 'Category 1', 'Product 1 (Category 1)', 100),\r\n    new Product(2, 'Product 2', 'Category 1', 'Product 2 (Category 1)', 100),\r\n    new Product(3, 'Product 3', 'Category 1', 'Product 3 (Category 1)', 100),\r\n    new Product(4, 'Product 4', 'Category 1', 'Product 4 (Category 1)', 100),\r\n    new Product(5, 'Product 5', 'Category 1', 'Product 5 (Category 1)', 100),\r\n    new Product(6, 'Product 6', 'Category 2', 'Product 6 (Category 2)', 100),\r\n    new Product(7, 'Product 7', 'Category 2', 'Product 7 (Category 2)', 100),\r\n    new Product(8, 'Product 8', 'Category 2', 'Product 8 (Category 2)', 100),\r\n    new Product(9, 'Product 9', 'Category 2', 'Product 9 (Category 2)', 100),\r\n    new Product(10, 'Product 10', 'Category 2', 'Product 10 (Category 2)', 100),\r\n    new Product(11, 'Product 11', 'Category 3', 'Product 11 (Category 3)', 100),\r\n    new Product(12, 'Product 12', 'Category 3', 'Product 12 (Category 3)', 100),\r\n    new Product(13, 'Product 13', 'Category 3', 'Product 13 (Category 3)', 100),\r\n    new Product(14, 'Product 14', 'Category 3', 'Product 14 (Category 3)', 100),\r\n    new Product(15, 'Product 15', 'Category 3', 'Product 15 (Category 3)', 100),\r\n  ]\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return from([this.products])\r\n  }\r\n\r\n  saveOrder(order: Order): \r\n  Observable<Order> {console.log(JSON.stringify(order))\r\n    return from([order])\r\n}\r\n}\r\n","import { Component } from'@angular/core'\r\nimport { Cart } from'../model/cart.model'\r\n\r\n@Component({\r\n  selector:'cart-summary',\r\n  templateUrl:'cartSummary.component.html',\r\n  })\r\n  \r\n  export class CartSummaryComponent{\r\n    // the cart is injected by Angular\r\n    constructor(public cart: Cart) \r\n    {}\r\n  }","<div class=\"float-right\">\r\n  <small> Your cart:\r\n    <span *ngIf=\"cart.itemCount > 0\">\r\n      {{ cart.itemCount }} items(s)\r\n      {{ cart.cartPrice | currency: 'USD':'symbol':'2.2-2' }}\r\n    </span>\r\n    <span *ngIf=\"cart.itemCount === 0\"> (empty)</span>\r\n  </small>\r\n  \r\n  <button class=\"btn btn-sm bg-dark text-white\" [disabled]=\"cart.itemCount === 0\"\r\n  routerlink=\"/cart\">\r\n    <i class=\"fas fa-shopping-cart\">\r\n    </i>\r\n  </button>\r\n</div>","import { Component } from '@angular/core'\r\nimport { Cart } from '../model/cart.model'\r\n\r\n@Component({\r\n  templateUrl: 'cartDetail.component.html',\r\n})\r\nexport class CartDetailComponent {\r\n  constructor(public cart: Cart) {}\r\n}","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col bg-dark text-white\">\r\n      <a class=\"navbar-brand\">SPORTS STORE</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col mt-2\">\r\n      <h2 class=\"text-center\">Your Cart</h2>\r\n      <table class=\"table table-bordered table-striped p-2\">\r\n        <thead>\r\n          <tr>\r\n            <th>Quantity</th>\r\n            <th>Product</th>\r\n            <th class=\"text-right\">Price</th>\r\n            <th class=\"text-right\">Subtotal</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngIf=\"cart.lines.length == 0\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n              Your cart is empty\r\n            </td>\r\n          </tr>\r\n          <tr *ngFor=\"let line of cart.lines\">\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control-sm\"\r\n                style=\"width: 5em;\"\r\n                [value]=\"line.quantity\"\r\n                (change)=\"cart.updateQuantity(line.product, $event.target.value)\"\r\n              />\r\n            </td>\r\n            <td>{{ line.product.name }}</td>\r\n            <td class=\"text-right\">\r\n              {{ line.product.price | currency: 'USD':'symbol':'2.2-2' }}\r\n            </td>\r\n            <td class=\"text-right\">\r\n              {{ line.lineTotal | currency: 'USD':'symbol':'2.2-2' }}\r\n            </td>\r\n            <td class=\"text-center\">\r\n              <button class=\"btn btn-sm btn-danger\" (click)=\"cart.removeLine(line.product.id)\">\r\n                Remove\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td colspan=\"3\" class=\"text-right\">Total:</td>\r\n            <td class=\"text-right\">\r\n              {{ cart.cartPrice | currency: 'USD':'symbol':'2.2-2' }}\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <div class=\"text-center\">\r\n        <button class=\"btn btn-primary m-1\" routerLink=\"/store\">\r\n          Continue Shopping\r\n        </button>\r\n        <button\r\n          class=\"btn btn-secondary m-1\"\r\n          routerLink=\"/checkout\"\r\n          [disabled]=\"cart.lines.length == 0\"\r\n        >\r\n          Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core'\r\nimport { NgForm } from '@angular/forms'\r\nimport { OrderRepository } from '../model/order.repository'\r\nimport { Order } from '../model/order.model'\r\n\r\n@Component({\r\n  templateUrl: 'checkout.component.html',\r\n  styleUrls: ['checkout.component.css'],\r\n})\r\nexport class CheckoutComponent {\r\n  orderSent: boolean = false\r\n  submitted: boolean = false\r\n\r\n  constructor(public repository: OrderRepository, public order: Order) {}\r\n\r\n  submitOrder(form: NgForm) {\r\n    this.submitted = true\r\n    if (form.valid) {\r\n      this.repository.saveOrder(this.order).subscribe((order) => {\r\n        this.order.clear()\r\n        this.orderSent = true\r\n        this.submitted = false\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col bg-dark text-white\">\r\n      <a class=\"navbar-brand\">SPORTS STORE</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"orderSent\" class=\"m-2 text-center\">\r\n  <h2>Thanks!</h2>\r\n  <p>Thanks for placing your order.</p>\r\n  <p>We'll ship your goods as soon as possible.</p>\r\n  <button class=\"btn btn-primary\" routerLink=\"/store\">Return to Store</button>\r\n</div>\r\n<form *ngIf=\"!orderSent\" #form=\"ngForm\" novalidate (ngSubmit)=\"submitOrder(form)\" class=\"m-2\">\r\n  <div class=\"form-group\">\r\n    <label>Name</label>\r\n    <input class=\"form-control\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"order.name\" required />\r\n    <span *ngIf=\"submitted && name.invalid\" class=\"text-danger\">\r\n      Please enter your name\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Address</label>\r\n    <input\r\n      class=\"form-control\"\r\n      #address=\"ngModel\"\r\n      name=\"address\"\r\n      [(ngModel)]=\"order.address\"\r\n      required\r\n    />\r\n    <span *ngIf=\"submitted && address.invalid\" class=\"text-danger\">\r\n      Please enter your address\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>City</label>\r\n    <input class=\"form-control\" #city=\"ngModel\" name=\"city\" [(ngModel)]=\"order.city\" required />\r\n    <span *ngIf=\"submitted && city.invalid\" class=\"text-danger\">\r\n      Please enter your city\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>State</label>\r\n    <input class=\"form-control\" #state=\"ngModel\" name=\"state\" [(ngModel)]=\"order.state\" required />\r\n    <span *ngIf=\"submitted && state.invalid\" class=\"text-danger\">\r\n      Please enter your state\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Zip/Postal Code</label>\r\n    <input class=\"form-control\" #zip=\"ngModel\" name=\"zip\" [(ngModel)]=\"order.zip\" required />\r\n    <span *ngIf=\"submitted && zip.invalid\" class=\"text-danger\">\r\n      Please enter your zip/postal code\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Country</label>\r\n    <input\r\n      class=\"form-control\"\r\n      #country=\"ngModel\"\r\n      name=\"country\"\r\n      [(ngModel)]=\"order.country\"\r\n      required\r\n    />\r\n    <span *ngIf=\"submitted && country.invalid\" class=\"text-danger\">\r\n      Please enter your country\r\n    </span>\r\n  </div>\r\n  <div class=\"text-center\">\r\n    <button class=\"btn btn-secondary m-1\" routerLink=\"/cart\">Back</button>\r\n    <button class=\"btn btn-primary m-1\" type=\"submit\">Complete Order</button>\r\n  </div>\r\n</form>","import { Component } from '@angular/core'\r\nimport { Product } from '../model/product.model'\r\nimport { ProductRepository } from '../model/product.repository'\r\nimport { CartSummaryComponent } from './cart.component'\r\nimport { Cart } from '../model/cart.model'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'store',\r\n  templateUrl: 'store.component.html',\r\n})\r\nexport class StoreComponent {\r\n  public selectedCategory = null\r\n  public productsPerPage = 4\r\n  public selectedPage = 1\r\n\r\n  constructor(private repository: ProductRepository,private cart: Cart,private router:Router) {}\r\n\r\n  get products(): Product[] {\r\n    let pageIndex = (this.selectedPage - 1) * this.productsPerPage\r\n    return this.repository\r\n      .getProducts(this.selectedCategory)\r\n      .slice(pageIndex, pageIndex + this.productsPerPage)\r\n  }\r\n\r\n  get categories(): string[] {\r\n    return this.repository.getCategories()\r\n  }\r\n\r\n  changeCategory(newCategory?: string) {\r\n    this.selectedPage = 1\r\n    this.selectedCategory = newCategory\r\n  }\r\n\r\n  changePage(newPage: number) {\r\n    this.selectedPage = newPage\r\n  }\r\n\r\n  changePageSize(newSize: number) {\r\n    this.productsPerPage = Number(newSize)\r\n    this.changePage(1)\r\n  }\r\n\r\n  get pageNumbers(): number[] {\r\n    const products = this.repository.getProducts(this.selectedCategory)\r\n    const pages = products.length / this.productsPerPage\r\n\r\n    // the next whole number, 0.5 => 1, 3.2 => 4\r\n    const pageCount = Math.ceil(pages)\r\n\r\n    // x is 0 and i is the index\r\n    // if page count is 3, it generate [1, 2, 3]\r\n    const pageNumbers = Array(pageCount)\r\n      .fill(0) // fills with 0\r\n      .map((x, i) => i + 1)\r\n\r\n    return pageNumbers\r\n  }\r\n\r\n  addProductToCart(product: Product) {\r\n    this.cart.addLine(product)\r\n    this.router.navigateByUrl('/cart')\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col bg-dark text-white\">\r\n      <a class=\"navbar-brand\">SPORTS STORE</a>\r\n      <cart-summary></cart-summary>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-3 p-2\">\r\n      <button class=\"btn btn-block btn-outline-primary\" (click)=\"changeCategory()\">\r\n        Home\r\n      </button>\r\n      <button\r\n        *ngFor=\"let cat of categories\"\r\n        class=\"btn btn-outline-primary btn-block\"\r\n        [class.active]=\"cat == selectedCategory\"\r\n        (click)=\"changeCategory(cat)\">\r\n        {{ cat }}\r\n      </button>\r\n      <button class=\"btn btn-block btn-danger m-t-3\" routerLink=\"/admin\">Admin</button>\r\n    </div>\r\n\r\n    <div class=\"col-9 p-2\">\r\n      <div *ngFor=\"let product of products\" class=\"card m-1 p-1 bg-light\">\r\n        <h4>\r\n          {{ product.name }}\r\n          <span class=\"badge badge-pill badge-primary float-right\">\r\n            {{ product.price | currency: 'USD':'symbol':'2.2-2' }}\r\n          </span>\r\n        </h4>\r\n        <div class=\"card-text bg-white p-1\">{{ product.description }}\r\n          <button class=\"btn btn-successs btn-sm float-right\"  (click)=\"addProductToCart(product)\">\r\n            Add to Cart</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-inline float-left mr-1\">\r\n        <select\r\n          class=\"form-control\"\r\n          [value]=\"productsPerPage\"\r\n          (change)=\"changePageSize($event.target.value)\">\r\n          <option value=\"3\">3 per Page</option>\r\n          <option value=\"4\">4 per Page</option>\r\n          <option value=\"6\">6 per Page</option>\r\n          <option value=\"8\">8 per Page</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"btn-group float-right\">\r\n        <button\r\n          *ngFor=\"let page of pageNumbers\"\r\n          (click)=\"changePage(page)\"\r\n          class=\"btn btn-outline-primary\"\r\n          [class.active]=\"page == selectedPage\">\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { ModelModule } from '../model/model.module'\r\nimport { StoreComponent } from './store.component'\r\nimport { CartSummaryComponent } from './cart.component'\r\nimport { CartDetailComponent } from './cartDetail.component'\r\nimport { CheckoutComponent } from './checkout.component'\r\nimport { RouterModule } from '@angular/router'\r\n\r\n@NgModule({\r\n  imports: [ModelModule, BrowserModule, FormsModule, RouterModule],\r\n  declarations: [StoreComponent, CartSummaryComponent,CartDetailComponent,CheckoutComponent],\r\n  exports: [StoreComponent,CartDetailComponent,CheckoutComponent],\r\n})\r\nexport class StoreModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'\r\nimport { StoreComponent } from './store/store.component'\r\n\r\n@Injectable()\r\nexport class StoreFirstGuard {\r\n  private firstNavigation = true\r\n  constructor(private router: Router) {}\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.firstNavigation) {\r\n      this.firstNavigation = false\r\n      if (route.component !== StoreComponent) {\r\n        this.router.navigateByUrl('/')\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}
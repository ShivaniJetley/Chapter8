{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/model/auth.service.ts","./src/app/model/cart.model.ts","./src/app/model/model.module.ts","./src/app/model/order.model.ts","./src/app/model/order.repository.ts","./src/app/model/product.model.ts","./src/app/model/product.repository.ts","./src/app/model/rest.datasource.ts","./src/app/model/static.datasource.ts","./src/app/store/cart.component.ts","./src/app/store/cartSummary.component.html","./src/app/store/cartDetail.component.ts","./src/app/store/cartDetail.component.html","./src/app/store/checkout.component.ts","./src/app/store/checkout.component.html","./src/app/store/store.component.ts","./src/app/store/store.component.html","./src/app/store/store.module.ts","./src/app/storeFirst.guard.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: '<router-outlet></router-outlet>',\r\n})\r\nexport class AppComponent {}\r\n","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { AppComponent } from './app.component'\r\nimport { StoreModule } from './store/store.module'\r\nimport { RouterModule } from'@angular/router'\r\nimport { StoreComponent } from './store/store.component'\r\nimport { CartDetailComponent } from './store/cartDetail.component'\r\nimport { CheckoutComponent } from './store/checkout.component'\r\nimport { StoreFirstGuard } from './storeFirst.guard'\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, \r\n    StoreModule,\r\n  RouterModule.forRoot([\r\n    { path: 'store', component: StoreComponent, canActivate: [StoreFirstGuard] },\r\n    { path: 'cart', component: CartDetailComponent, canActivate: [StoreFirstGuard] },\r\n    { path: 'checkout', component: CheckoutComponent, canActivate: [StoreFirstGuard] },\r\n    {\r\n      path: 'admin',\r\n      loadChildren: () => import('./admin/admin.module').then((m) => m.AdminModule),\r\n      canActivate: [StoreFirstGuard],\r\n    },\r\n    { path: '**', redirectTo: '/store' },    \r\n  ]),\r\n  ],\r\n  providers: [StoreFirstGuard],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { RestDataSource } from './rest.datasource'\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private datasource: RestDataSource) {}\r\n\r\n  authenticate(username: string, password: string): Observable<boolean> {\r\n    return this.datasource.authenticate(username, password)\r\n  }\r\n\r\n  get authenticated(): boolean {\r\n    return this.datasource.auth_token != null\r\n  }\r\n\r\n  clear() {\r\n    this.datasource.auth_token = null\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Product } from './product.model'\r\n\r\n@Injectable() // inject it to other places\r\nexport class Cart {\r\n  public lines: CartLine[] = []\r\n  public itemCount: number = 0\r\n  public cartPrice: number = 0\r\n\r\n  addLine(product: Product, quantity: number = 1) {\r\n    let line = this.lines.find(line => line.product.id == product.id)\r\n    if (line != undefined) {\r\n      line.quantity += quantity\r\n    } else {\r\n      this.lines.push(new CartLine(product, quantity))\r\n    }\r\n    this.recalculate()\r\n  }\r\n\r\n  updateQuantity(product: Product, quantity: number) {\r\n    let line = this.lines.find(line => line.product.id == product.id)\r\n    if (line != undefined) {\r\n      line.quantity = Number(quantity)\r\n    }\r\n    this.recalculate()\r\n  }\r\n\r\n  removeLine(id: number) {\r\n    let index = this.lines.findIndex(line => line.product.id == id)\r\n    this.lines.splice(index, 1)\r\n    this.recalculate()\r\n  }\r\n\r\n  clear() {\r\n    this.lines = []\r\n    this.itemCount = 0\r\n    this.cartPrice = 0\r\n  }\r\n\r\n  private recalculate() {\r\n    this.itemCount = 0\r\n    this.cartPrice = 0\r\n    this.lines.forEach(l => {\r\n      this.itemCount += l.quantity\r\n      this.cartPrice += l.quantity * l.product.price\r\n    })\r\n  }\r\n}\r\n\r\nexport class CartLine {\r\n  constructor(public product: Product, public quantity: number) {}\r\n\r\n  get lineTotal() {\r\n    return this.quantity * this.product.price\r\n  }\r\n}","import { NgModule } from '@angular/core'\r\nimport { ProductRepository } from './product.repository'\r\nimport { StaticDataSource } from './static.datasource'\r\nimport { Cart } from './cart.model'\r\nimport { Order } from './order.model'\r\nimport { OrderRepository } from './order.repository'\r\nimport { RestDataSource } from './rest.datasource'\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { AuthService } from './auth.service'\r\n\r\n// make its classes/services available to other modules\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  providers: [ProductRepository, \r\n    { provide: StaticDataSource, useClass: RestDataSource }\r\n    , Cart, Order, OrderRepository,AuthService,RestDataSource],\r\n})\r\nexport class ModelModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Cart } from './cart.model'\r\n\r\n@Injectable()\r\nexport class Order {\r\n  public id: number\r\n  public name: string\r\n  public address: string\r\n  public city: string\r\n  public state: string\r\n  public zip: string\r\n  public country: string\r\n  public shipped: boolean = false\r\n\r\n  constructor(public cart: Cart) {}\r\n\r\n  clear() {\r\n    this.id = null\r\n    this.name = this.address = this.city = null\r\n    this.state = this.zip = this.country = null\r\n    this.shipped = false\r\n    this.cart.clear()\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Order } from './order.model'\r\nimport { StaticDataSource } from './static.datasource'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable()\r\nexport class OrderRepository {\r\n  private orders: Order[] = []\r\n  constructor(private dataSource: StaticDataSource) {}\r\n  getOrders(): Order[] {\r\n    return this.orders\r\n  }\r\n  saveOrder(order: Order): Observable<Order> {\r\n    return this.dataSource.saveOrder(order)\r\n  }\r\n}","export class Product {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public category?: string,\r\n    public description?: string,\r\n    public price?: number,\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Product } from './product.model'\r\nimport { StaticDataSource } from './static.datasource'\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n  private products: Product[] = []\r\n  private categories: string[] = []\r\n\r\n  constructor(private dataSource: StaticDataSource) {\r\n    dataSource.getProducts().subscribe(data => {\r\n      this.products = data\r\n      this.categories = data\r\n        .map(p => p.category)\r\n        .filter((c, index, array) => array.indexOf(c) == index)\r\n        .sort()\r\n    })\r\n  }\r\n\r\n  getProducts(category: string = null): Product[] {\r\n    return this.products.filter(p => category == null || category == p.category)\r\n  }\r\n\r\n  getProduct(id: number): Product {\r\n    return this.products.find(p => p.id == id)\r\n  }\r\n\r\n  getCategories(): string[] {\r\n    return this.categories\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { Product } from './product.model'\r\nimport { Order } from './order.model'\r\nimport { map } from 'rxjs/operators'\r\nimport { HttpHeaders } from '@angular/common/http'\r\n\r\nconst PROTOCOL = 'http'\r\nconst PORT = 3500\r\n\r\n@Injectable()\r\nexport class RestDataSource {\r\n  baseUrl: string\r\n  auth_token: string\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/`\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.baseUrl + 'products')\r\n  }\r\n\r\n  saveOrder(order: Order): Observable<Order> {\r\n    return this.http.post<Order>(this.baseUrl + 'orders', order)\r\n  }\r\n\r\n  authenticate(user: string, pass: string): Observable<boolean> {\r\n    return this.http\r\n      .post<any>(this.baseUrl + 'login', {\r\n        name: user,\r\n        password: pass,\r\n      })\r\n      .pipe(\r\n        map((response) => {\r\n          this.auth_token = response.success ? response.token : null\r\n          return response.success\r\n        }),\r\n      )\r\n  }\r\n\r\n  saveProduct(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(this.baseUrl + 'products', product, this.getOptions())\r\n  }\r\n\r\n  updateProduct(product): Observable<Product> {\r\n    return this.http.put<Product>(\r\n      `${this.baseUrl}products/${product.id}`,\r\n      product,\r\n      this.getOptions(),\r\n    )\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<Product> {\r\n    return this.http.delete<Product>(`${this.baseUrl}products/${id}`, this.getOptions())\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(this.baseUrl + 'orders', this.getOptions())\r\n  }\r\n\r\n  deleteOrder(id: number): Observable<Order> {\r\n    return this.http.delete<Order>(`${this.baseUrl}orders/${id}`, this.getOptions())\r\n  }\r\n\r\n  updateOrder(order: Order): Observable<Order> {\r\n    return this.http.put<Order>(`${this.baseUrl}orders/${order.id}`, this.getOptions())\r\n  }\r\n\r\n  private getOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        Authorization: `Bearer<${this.auth_token}>`,\r\n      }),\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Product } from './product.model'\r\nimport { Observable, from } from 'rxjs'\r\nimport { Order } from './order.model'\r\n\r\n@Injectable()\r\nexport class StaticDataSource {\r\n  private products: Product[] = [\r\n    new Product(1, 'Product 1', 'Category 1', 'Product 1 (Category 1)', 100),\r\n    new Product(2, 'Product 2', 'Category 1', 'Product 2 (Category 1)', 100),\r\n    new Product(3, 'Product 3', 'Category 1', 'Product 3 (Category 1)', 100),\r\n    new Product(4, 'Product 4', 'Category 1', 'Product 4 (Category 1)', 100),\r\n    new Product(5, 'Product 5', 'Category 1', 'Product 5 (Category 1)', 100),\r\n    new Product(6, 'Product 6', 'Category 2', 'Product 6 (Category 2)', 100),\r\n    new Product(7, 'Product 7', 'Category 2', 'Product 7 (Category 2)', 100),\r\n    new Product(8, 'Product 8', 'Category 2', 'Product 8 (Category 2)', 100),\r\n    new Product(9, 'Product 9', 'Category 2', 'Product 9 (Category 2)', 100),\r\n    new Product(10, 'Product 10', 'Category 2', 'Product 10 (Category 2)', 100),\r\n    new Product(11, 'Product 11', 'Category 3', 'Product 11 (Category 3)', 100),\r\n    new Product(12, 'Product 12', 'Category 3', 'Product 12 (Category 3)', 100),\r\n    new Product(13, 'Product 13', 'Category 3', 'Product 13 (Category 3)', 100),\r\n    new Product(14, 'Product 14', 'Category 3', 'Product 14 (Category 3)', 100),\r\n    new Product(15, 'Product 15', 'Category 3', 'Product 15 (Category 3)', 100),\r\n  ]\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return from([this.products])\r\n  }\r\n\r\n  saveOrder(order: Order): \r\n  Observable<Order> {console.log(JSON.stringify(order))\r\n    return from([order])\r\n}\r\n}\r\n","import { Component } from'@angular/core'\r\nimport { Cart } from'../model/cart.model'\r\n\r\n@Component({\r\n  selector:'cart-summary',\r\n  templateUrl:'cartSummary.component.html',\r\n  })\r\n  \r\n  export class CartSummaryComponent{\r\n    // the cart is injected by Angular\r\n    constructor(public cart: Cart) \r\n    {}\r\n  }","<div class=\"float-right\">\r\n  <small> Your cart:\r\n    <span *ngIf=\"cart.itemCount > 0\">\r\n      {{ cart.itemCount }} items(s)\r\n      {{ cart.cartPrice | currency: 'USD':'symbol':'2.2-2' }}\r\n    </span>\r\n    <span *ngIf=\"cart.itemCount === 0\"> (empty)</span>\r\n  </small>\r\n  \r\n  <button class=\"btn btn-sm bg-dark text-white\" [disabled]=\"cart.itemCount === 0\"\r\n  routerlink=\"/cart\">\r\n    <i class=\"fas fa-shopping-cart\">\r\n    </i>\r\n  </button>\r\n</div>","import { Component } from '@angular/core'\r\nimport { Cart } from '../model/cart.model'\r\n\r\n@Component({\r\n  templateUrl: 'cartDetail.component.html',\r\n})\r\nexport class CartDetailComponent {\r\n  constructor(public cart: Cart) {}\r\n}","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col bg-dark text-white\">\r\n      <a class=\"navbar-brand\">SPORTS STORE</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col mt-2\">\r\n      <h2 class=\"text-center\">Your Cart</h2>\r\n      <table class=\"table table-bordered table-striped p-2\">\r\n        <thead>\r\n          <tr>\r\n            <th>Quantity</th>\r\n            <th>Product</th>\r\n            <th class=\"text-right\">Price</th>\r\n            <th class=\"text-right\">Subtotal</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngIf=\"cart.lines.length == 0\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n              Your cart is empty\r\n            </td>\r\n          </tr>\r\n          <tr *ngFor=\"let line of cart.lines\">\r\n            <td>\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control-sm\"\r\n                style=\"width: 5em;\"\r\n                [value]=\"line.quantity\"\r\n                (change)=\"cart.updateQuantity(line.product, $event.target.value)\"\r\n              />\r\n            </td>\r\n            <td>{{ line.product.name }}</td>\r\n            <td class=\"text-right\">\r\n              {{ line.product.price | currency: 'USD':'symbol':'2.2-2' }}\r\n            </td>\r\n            <td class=\"text-right\">\r\n              {{ line.lineTotal | currency: 'USD':'symbol':'2.2-2' }}\r\n            </td>\r\n            <td class=\"text-center\">\r\n              <button class=\"btn btn-sm btn-danger\" (click)=\"cart.removeLine(line.product.id)\">\r\n                Remove\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td colspan=\"3\" class=\"text-right\">Total:</td>\r\n            <td class=\"text-right\">\r\n              {{ cart.cartPrice | currency: 'USD':'symbol':'2.2-2' }}\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <div class=\"text-center\">\r\n        <button class=\"btn btn-primary m-1\" routerLink=\"/store\">\r\n          Continue Shopping\r\n        </button>\r\n        <button\r\n          class=\"btn btn-secondary m-1\"\r\n          routerLink=\"/checkout\"\r\n          [disabled]=\"cart.lines.length == 0\"\r\n        >\r\n          Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core'\r\nimport { NgForm } from '@angular/forms'\r\nimport { OrderRepository } from '../model/order.repository'\r\nimport { Order } from '../model/order.model'\r\n\r\n@Component({\r\n  templateUrl: 'checkout.component.html',\r\n  styleUrls: ['checkout.component.css'],\r\n})\r\nexport class CheckoutComponent {\r\n  orderSent: boolean = false\r\n  submitted: boolean = false\r\n\r\n  constructor(public repository: OrderRepository, public order: Order) {}\r\n\r\n  submitOrder(form: NgForm) {\r\n    this.submitted = true\r\n    if (form.valid) {\r\n      this.repository.saveOrder(this.order).subscribe((order) => {\r\n        this.order.clear()\r\n        this.orderSent = true\r\n        this.submitted = false\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col bg-dark text-white\">\r\n      <a class=\"navbar-brand\">SPORTS STORE</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"orderSent\" class=\"m-2 text-center\">\r\n  <h2>Thanks!</h2>\r\n  <p>Thanks for placing your order.</p>\r\n  <p>We'll ship your goods as soon as possible.</p>\r\n  <button class=\"btn btn-primary\" routerLink=\"/store\">Return to Store</button>\r\n</div>\r\n<form *ngIf=\"!orderSent\" #form=\"ngForm\" novalidate (ngSubmit)=\"submitOrder(form)\" class=\"m-2\">\r\n  <div class=\"form-group\">\r\n    <label>Name</label>\r\n    <input class=\"form-control\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"order.name\" required />\r\n    <span *ngIf=\"submitted && name.invalid\" class=\"text-danger\">\r\n      Please enter your name\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Address</label>\r\n    <input\r\n      class=\"form-control\"\r\n      #address=\"ngModel\"\r\n      name=\"address\"\r\n      [(ngModel)]=\"order.address\"\r\n      required\r\n    />\r\n    <span *ngIf=\"submitted && address.invalid\" class=\"text-danger\">\r\n      Please enter your address\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>City</label>\r\n    <input class=\"form-control\" #city=\"ngModel\" name=\"city\" [(ngModel)]=\"order.city\" required />\r\n    <span *ngIf=\"submitted && city.invalid\" class=\"text-danger\">\r\n      Please enter your city\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>State</label>\r\n    <input class=\"form-control\" #state=\"ngModel\" name=\"state\" [(ngModel)]=\"order.state\" required />\r\n    <span *ngIf=\"submitted && state.invalid\" class=\"text-danger\">\r\n      Please enter your state\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Zip/Postal Code</label>\r\n    <input class=\"form-control\" #zip=\"ngModel\" name=\"zip\" [(ngModel)]=\"order.zip\" required />\r\n    <span *ngIf=\"submitted && zip.invalid\" class=\"text-danger\">\r\n      Please enter your zip/postal code\r\n    </span>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Country</label>\r\n    <input\r\n      class=\"form-control\"\r\n      #country=\"ngModel\"\r\n      name=\"country\"\r\n      [(ngModel)]=\"order.country\"\r\n      required\r\n    />\r\n    <span *ngIf=\"submitted && country.invalid\" class=\"text-danger\">\r\n      Please enter your country\r\n    </span>\r\n  </div>\r\n  <div class=\"text-center\">\r\n    <button class=\"btn btn-secondary m-1\" routerLink=\"/cart\">Back</button>\r\n    <button class=\"btn btn-primary m-1\" type=\"submit\">Complete Order</button>\r\n  </div>\r\n</form>","import { Component } from '@angular/core'\r\nimport { Product } from '../model/product.model'\r\nimport { ProductRepository } from '../model/product.repository'\r\nimport { CartSummaryComponent } from './cart.component'\r\nimport { Cart } from '../model/cart.model'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'store',\r\n  templateUrl: 'store.component.html',\r\n})\r\nexport class StoreComponent {\r\n  public selectedCategory = null\r\n  public productsPerPage = 4\r\n  public selectedPage = 1\r\n\r\n  constructor(private repository: ProductRepository,private cart: Cart,private router:Router) {}\r\n\r\n  get products(): Product[] {\r\n    let pageIndex = (this.selectedPage - 1) * this.productsPerPage\r\n    return this.repository\r\n      .getProducts(this.selectedCategory)\r\n      .slice(pageIndex, pageIndex + this.productsPerPage)\r\n  }\r\n\r\n  get categories(): string[] {\r\n    return this.repository.getCategories()\r\n  }\r\n\r\n  changeCategory(newCategory?: string) {\r\n    this.selectedPage = 1\r\n    this.selectedCategory = newCategory\r\n  }\r\n\r\n  changePage(newPage: number) {\r\n    this.selectedPage = newPage\r\n  }\r\n\r\n  changePageSize(newSize: number) {\r\n    this.productsPerPage = Number(newSize)\r\n    this.changePage(1)\r\n  }\r\n\r\n  get pageNumbers(): number[] {\r\n    const products = this.repository.getProducts(this.selectedCategory)\r\n    const pages = products.length / this.productsPerPage\r\n\r\n    // the next whole number, 0.5 => 1, 3.2 => 4\r\n    const pageCount = Math.ceil(pages)\r\n\r\n    // x is 0 and i is the index\r\n    // if page count is 3, it generate [1, 2, 3]\r\n    const pageNumbers = Array(pageCount)\r\n      .fill(0) // fills with 0\r\n      .map((x, i) => i + 1)\r\n\r\n    return pageNumbers\r\n  }\r\n\r\n  addProductToCart(product: Product) {\r\n    this.cart.addLine(product)\r\n    this.router.navigateByUrl('/cart')\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col bg-dark text-white\">\r\n      <a class=\"navbar-brand\">SPORTS STORE</a>\r\n      <cart-summary></cart-summary>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-3 p-2\">\r\n      <button class=\"btn btn-block btn-outline-primary\" (click)=\"changeCategory()\">\r\n        Home\r\n      </button>\r\n      <button\r\n        *ngFor=\"let cat of categories\"\r\n        class=\"btn btn-outline-primary btn-block\"\r\n        [class.active]=\"cat == selectedCategory\"\r\n        (click)=\"changeCategory(cat)\">\r\n        {{ cat }}\r\n      </button>\r\n      <button class=\"btn btn-block btn-danger m-t-3\" routerLink=\"/admin\">Admin</button>\r\n    </div>\r\n\r\n    <div class=\"col-9 p-2\">\r\n      <div *ngFor=\"let product of products\" class=\"card m-1 p-1 bg-light\">\r\n        <h4>\r\n          {{ product.name }}\r\n          <span class=\"badge badge-pill badge-primary float-right\">\r\n            {{ product.price | currency: 'USD':'symbol':'2.2-2' }}\r\n          </span>\r\n        </h4>\r\n        <div class=\"card-text bg-white p-1\">{{ product.description }}\r\n          <button class=\"btn btn-successs btn-sm float-right\"  (click)=\"addProductToCart(product)\">\r\n            Add to Cart</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-inline float-left mr-1\">\r\n        <select\r\n          class=\"form-control\"\r\n          [value]=\"productsPerPage\"\r\n          (change)=\"changePageSize($event.target.value)\">\r\n          <option value=\"3\">3 per Page</option>\r\n          <option value=\"4\">4 per Page</option>\r\n          <option value=\"6\">6 per Page</option>\r\n          <option value=\"8\">8 per Page</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"btn-group float-right\">\r\n        <button\r\n          *ngFor=\"let page of pageNumbers\"\r\n          (click)=\"changePage(page)\"\r\n          class=\"btn btn-outline-primary\"\r\n          [class.active]=\"page == selectedPage\">\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { ModelModule } from '../model/model.module'\r\nimport { StoreComponent } from './store.component'\r\nimport { CartSummaryComponent } from './cart.component'\r\nimport { CartDetailComponent } from './cartDetail.component'\r\nimport { CheckoutComponent } from './checkout.component'\r\nimport { RouterModule } from '@angular/router'\r\n\r\n@NgModule({\r\n  imports: [ModelModule, BrowserModule, FormsModule, RouterModule],\r\n  declarations: [StoreComponent, CartSummaryComponent,CartDetailComponent,CheckoutComponent],\r\n  exports: [StoreComponent,CartDetailComponent,CheckoutComponent],\r\n})\r\nexport class StoreModule {}\r\n","import { Injectable } from '@angular/core'\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'\r\nimport { StoreComponent } from './store/store.component'\r\n\r\n@Injectable()\r\nexport class StoreFirstGuard {\r\n  private firstNavigation = true\r\n  constructor(private router: Router) {}\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.firstNavigation) {\r\n      this.firstNavigation = false\r\n      if (route.component !== StoreComponent) {\r\n        this.router.navigateByUrl('/')\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}